#pragma once
#include "Effect.h"

namespace HyEngine
{
	class TextureEffect : public Effect
	{
		//////////////////////////////////////////////////////////////////////////
		// CONSTRUCTOR & DESTRUCTOR
		//////////////////////////////////////////////////////////////////////////
	private :
		explicit TextureEffect(Scene* scene, int editID);
		explicit TextureEffect(Scene* scene);
		virtual ~TextureEffect();

		//////////////////////////////////////////////////////////////////////////
		// INHERITED
		//////////////////////////////////////////////////////////////////////////
	public :
		virtual void OnEnable() override;
		virtual void OnDisable() override;
		virtual void Update() override;
		virtual void Render() override;
		virtual void UpdatedData(EDataType dataType)override;

		//////////////////////////////////////////////////////////////////////////
		// INITIALIZER
		//////////////////////////////////////////////////////////////////////////
	private:
		void Initialize();


		//////////////////////////////////////////////////////////////////////////
		// VARIABLES
		//////////////////////////////////////////////////////////////////////////
	private :
		class TextureQuad * m_pTextureQuad;
		IDirect3DTexture9* m_pDiffuseMap = nullptr;
		IDirect3DTexture9* m_pAlphaMask = nullptr;


		//////////////////////////////////////////////////////////////////////////
		// FACTORY METHOD
		//////////////////////////////////////////////////////////////////////////
	public :
		static TextureEffect* Create(Scene* scene);
		static TextureEffect* Create(Scene* scene, int editID);
	};
}