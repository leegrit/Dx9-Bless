#pragma once
#include "Camera.h"

using namespace HyEngine;


class PlayerCamera : public Camera
{
	//////////////////////////////////////////////////////////////////////////
	// CONSTRUCTOR & DESTRUCTOR 
	//////////////////////////////////////////////////////////////////////////
private  :
	PlayerCamera(Scene* scene, GameObject* player, wstring name);
	virtual ~PlayerCamera();

	//////////////////////////////////////////////////////////////////////////
	// INHERITED
	//////////////////////////////////////////////////////////////////////////
public :
	virtual void Initialize() override;
	virtual void Update() override;

	//////////////////////////////////////////////////////////////////////////
	// CALLBACK
	//////////////////////////////////////////////////////////////////////////
public :
	void OnDialogOpen(void*);
	void OnDialogEnd(void*);

	//////////////////////////////////////////////////////////////////////////
	// FOR MOVEMENT
	//////////////////////////////////////////////////////////////////////////
private :
	void ParamChange();
	void Movement();

private : /* New  */
	void MouseFix();
	//void MouseMove();

	//////////////////////////////////////////////////////////////////////////
	// VARIABLES
	//////////////////////////////////////////////////////////////////////////
private :
	GameObject* m_pPlayer = nullptr;

	/* For Movement */
	//float m_distanceToTarget = 1;
	float m_distanceToTarget = 40;


	/* For Rotation  */
	D3DXVECTOR3 m_mouseCenter;
	const float m_rotDegreeMax = 40;
	const float m_rotDegreeMin = 10;
	float m_rotDegree = 45;
	float m_rotSpdFactor = 0.5f;

	bool m_bMouseFix = true;
	//////////////////////////////////////////////////////////////////////////
	// FACTORY METHOD
	//////////////////////////////////////////////////////////////////////////
public:
	static PlayerCamera* Create(Scene* scene, GameObject* player, wstring name);
};

