#pragma once
#include "NonePlayer.h"

class Elroy : public NonePlayer
{
	//////////////////////////////////////////////////////////////////////////
	// CONSTRUCTOR & DESTRUCTOR
	//////////////////////////////////////////////////////////////////////////
protected :
	explicit Elroy(Scene* pScene);
	virtual ~Elroy();

	//////////////////////////////////////////////////////////////////////////
	// INHERITED
	//////////////////////////////////////////////////////////////////////////
public:
	virtual void Initialize(std::wstring dataPath);
	virtual void Update() override;
	virtual std::wstring GetCharacterName() override;
	virtual std::wstring GetSubTitle() override;

	//////////////////////////////////////////////////////////////////////////
	// FACTORY METHOD
	//////////////////////////////////////////////////////////////////////////
public:
	static Elroy * Create(Scene* pScene, std::wstring dataPath)
	{
		Elroy* obj = new Elroy(pScene);
		obj->Initialize(dataPath);
		return obj;
	}
};

