#pragma once

class GameScene;
class GameManager
{
	//////////////////////////////////////////////////////////////////////////
	// CONSTRUCTOR & DESTRUCTOR
	//////////////////////////////////////////////////////////////////////////
public:
	explicit GameManager(GameScene* pScene);
	virtual ~GameManager();

	//////////////////////////////////////////////////////////////////////////
	// CALLBACK
	//////////////////////////////////////////////////////////////////////////
public :
	void OnSendExp(void*);
	void OnInventoryUIOpen(void*);
	void OnInventoryUIClose(void*);
	void OnEquipmentUIOpen(void*);
	void OnEquipmentUIClose(void*);
	void OnShopUIOpen(void*);
	void OnShopUIClose(void*);

	//////////////////////////////////////////////////////////////////////////
	// PUBLIC METHOD
	//////////////////////////////////////////////////////////////////////////
public :
	void Initialize();
	void Update();
	bool IsPlayerMovable();


	//////////////////////////////////////////////////////////////////////////
	// VARIABLES
	//////////////////////////////////////////////////////////////////////////
private :
	class GameScene* m_pScene = nullptr;

	// 화면에 인벤토리, 장비창, 상점 등
	// ui가 차지하고 있는 경우 true
	bool m_bOccupyUI = false; 
};

