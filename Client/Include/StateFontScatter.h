#pragma once
#include "GameObject.h"


struct StateFontDesc
{
	friend class StateFontScatter;
public :
	std::wstring font;
	D3DXVECTOR3 position;
	float m_elapsed = 0;
	FontDesc fontDesc;

private :
	float size = 1;
	D3DXVECTOR3 dir = D3DXVECTOR3(0, 0, 0);
	float speed = 1.0f;
};
class StateFontScatter : public GameObject
{
	//////////////////////////////////////////////////////////////////////////
	// CONSTRUCTOR & DESTRUCTOR
	//////////////////////////////////////////////////////////////////////////
protected :
	explicit StateFontScatter(Scene* pScene);
	virtual ~StateFontScatter();

	//////////////////////////////////////////////////////////////////////////
	// INHERITED
	//////////////////////////////////////////////////////////////////////////
public:
	virtual void Render() override;
	virtual void Update() override;

	//////////////////////////////////////////////////////////////////////////
	// PUBLIC METHOD
	//////////////////////////////////////////////////////////////////////////
public :
	void Initialize();
	void PushStateFont(std::wstring font, D3DXVECTOR3 center);

	//////////////////////////////////////////////////////////////////////////
	// VARIABLES
	//////////////////////////////////////////////////////////////////////////
private :
	std::vector<StateFontDesc> m_stateFonts;
	float m_radius = 5;

private: /* for fade effect  */
	const float m_speed = 1;
	const float m_delay = 2.0f;
	const float m_fadeInTime = 0.2f;
	const float m_fadeOutTime = 0.5f;



	//////////////////////////////////////////////////////////////////////////
	// FACTORY METHOD
	//////////////////////////////////////////////////////////////////////////
public:
	static StateFontScatter* Create(Scene* pScene);
};

