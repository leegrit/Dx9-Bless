#pragma once
#include "GameObject.h"

namespace HyEngine
{
	class ProgressBar;
}
using namespace HyEngine;

class SkillIconUI : public GameObject
{
	//////////////////////////////////////////////////////////////////////////
	// CONSTRUCTOR & DESTURCTOR
	//////////////////////////////////////////////////////////////////////////
protected :
	explicit SkillIconUI(Scene* pScene, std::wstring IconFilePath, std::wstring grayIconFilePath,
		D3DXVECTOR3 position ,int skillIndex, std::wstring name);
	virtual ~SkillIconUI();

	//////////////////////////////////////////////////////////////////////////
	// INHERITED
	//////////////////////////////////////////////////////////////////////////
public :
	virtual void Initialize();
	virtual void Update() override;
	virtual void Render() override;
	virtual void OnEnable() override;
	virtual void OnDisable() override;

	//////////////////////////////////////////////////////////////////////////
	// PUBLIC METHOD
	//////////////////////////////////////////////////////////////////////////
public :



	//////////////////////////////////////////////////////////////////////////
	// VARIABLES
	//////////////////////////////////////////////////////////////////////////
private : /* For Render */
	UIPanel* m_pFullEffectUI = nullptr; // ÄðÅ¸ÀÓ ´Ù Ã¡À»¶§ ºû³ª´Â ¾ÆÀÌÄÜ
	class SkillProgressUI* m_pFillIcon = nullptr;
	UIPanel* m_pFillBack = nullptr; // gray

	
private : 
	class PlayerAction* m_pSkill;
	float m_amount = 0;
	int m_skillIndex = 0;
	

	//////////////////////////////////////////////////////////////////////////
	// FACTORY METHOD
	//////////////////////////////////////////////////////////////////////////
public :
	static SkillIconUI * Create(Scene* pScene, std::wstring IconFilePath, std::wstring grayIconFilePath,
		D3DXVECTOR3 position, int skillIndex, std::wstring name);

};

