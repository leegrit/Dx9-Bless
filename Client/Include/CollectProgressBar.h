#pragma once
#include "GameObject.h"

namespace HyEngine
{
	class ProgressBar;
}
using namespace HyEngine;

class CollectProgressBar : public GameObject
{
	//////////////////////////////////////////////////////////////////////////
	// CONSTRUCTOR & DESTRUCTOR
	//////////////////////////////////////////////////////////////////////////
protected :
	explicit CollectProgressBar(Scene* pScene, std::wstring name);
	virtual ~CollectProgressBar();

	//////////////////////////////////////////////////////////////////////////
	// INHERITED
	//////////////////////////////////////////////////////////////////////////
public :
	virtual void Initialize();
	virtual void Update() override;
	virtual void Render() override;

	//////////////////////////////////////////////////////////////////////////
	// PUBLIC METHOD
	//////////////////////////////////////////////////////////////////////////
public :
	void Show(float amount);
	void Hide();

	//////////////////////////////////////////////////////////////////////////
	// VARIABLES
	//////////////////////////////////////////////////////////////////////////
private : /* For Render */
	UIPanel* m_pFillBack = nullptr;
	ProgressBar * m_pFill = nullptr;

private :
	float m_amount = 0;
	bool m_bShow = false;

	//////////////////////////////////////////////////////////////////////////
	// FACTORY METHOD
	//////////////////////////////////////////////////////////////////////////
public :
	static CollectProgressBar * Create(Scene* pScene, std::wstring name);

};

