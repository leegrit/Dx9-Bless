#pragma once
#include "Equipment.h"
using namespace HyEngine;
class WeaponAfterImage : public Equipment
{
	//////////////////////////////////////////////////////////////////////////
	// CONSTRUCTOR & DESTRUCTOR
	//////////////////////////////////////////////////////////////////////////
protected:
	explicit WeaponAfterImage(Scene* pScene, GameObject * pOwner);
	virtual ~WeaponAfterImage();

	//////////////////////////////////////////////////////////////////////////
	// INHERITED
	//////////////////////////////////////////////////////////////////////////
public :
	virtual void Render() override;
	virtual void DrawPrimitive(ID3DXEffect* pShader) override;

	//////////////////////////////////////////////////////////////////////////
	// PUBLIC METHOD
	//////////////////////////////////////////////////////////////////////////
public :
	void SetWorldMatrix(D3DXMATRIX mat);
	void Reset(class Equipment* pOrigin);
	void SetScale(D3DXVECTOR3 scale);
	//////////////////////////////////////////////////////////////////////////
	// VARIABLES
	//////////////////////////////////////////////////////////////////////////
private :
	D3DXMATRIX m_worldMat;
	D3DXVECTOR3 m_afterImageScale = D3DXVECTOR3(1, 1, 1);

private :
	D3DXMATRIX m_parentMat;

	//////////////////////////////////////////////////////////////////////////
	// FACTORY METHOD
	//////////////////////////////////////////////////////////////////////////
public:
	static WeaponAfterImage * Create(Scene* pScene, GameObject* pOwner, std::wstring xFilePath, std::wstring boneName);

};

