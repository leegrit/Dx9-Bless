#pragma once
#include "GameObject.h"

namespace HyEngine
{
	class ProgressBar;
}
using namespace HyEngine;

class EnemyScreenHPBar : public GameObject
{
	//////////////////////////////////////////////////////////////////////////
	// CONSTRUCTOR & DESTRUCTOR
	//////////////////////////////////////////////////////////////////////////
protected :
	explicit EnemyScreenHPBar(Scene* pScene, std::wstring name);
	virtual ~EnemyScreenHPBar();

	//////////////////////////////////////////////////////////////////////////
	// INHERITED
	//////////////////////////////////////////////////////////////////////////
public :
	virtual void Initialize();
	virtual void Update() override;
	virtual void Render() override;

	//////////////////////////////////////////////////////////////////////////
	// PUBLIC METHOD
	//////////////////////////////////////////////////////////////////////////
public :
	void Show(GameObject* pFocusedEnemy);
	void Hide();

	//////////////////////////////////////////////////////////////////////////
	// VARIABLES
	//////////////////////////////////////////////////////////////////////////
private : /* For Render */
	UIPanel * m_pIcon = nullptr;
	UIPanel * m_pFillBack = nullptr;
	UIPanel* m_pBloodMark = nullptr;
	ProgressBar* m_pFill = nullptr;
	bool m_bShow = false;

private :
	class Enemy* m_pFocusedEnemy = nullptr;
	float m_lastAmount = 0;
	//////////////////////////////////////////////////////////////////////////
	// FACTORY METHOD
	//////////////////////////////////////////////////////////////////////////
public :
	static EnemyScreenHPBar * Create(Scene* pScene, std::wstring name);
};

